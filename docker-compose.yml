services:
  mysql:
    image: mysql:8.0
    container_name: ${MYSQL_HOST}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 3s
      retries: 5
      start_period: 1s
      timeout: 10s
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command:
      --skip-character-set-client-handshake
    volumes:
      - ./king-backend/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql-data:/var/lib/mysql
    expose:
      - "3306"
    networks:
      - king

  redis:
    image: redis:alpine
    container_name: redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      retries: 5
      start_period: 1s
      timeout: 10s
    restart: always
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    expose:
      - "6379"
    networks:
      - king

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
    container_name: elastic
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 5s
      retries: 60
      start_period: 5s
      timeout: 10s
    restart: always
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    expose:
      - "9200"
    networks:
      - king

  springboot:
    image: openjdk:17.0.2-jdk-slim
    container_name: springboot
    restart: always
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DB: ${MYSQL_DB}
      MYSQL_USERNAME: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      ELASTIC_HOST: ${ELASTIC_HOST}
      ELASTIC_PORT: ${ELASTIC_PORT}
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      OAUTH2_GOOGLE_CLIENT_ID: ${OAUTH2_GOOGLE_CLIENT_ID}
      OAUTH2_GOOGLE_CLIENT_SECRET: ${OAUTH2_GOOGLE_CLIENT_SECRET}
      OAUTH2_GOOGLE_API_ENDPOINT: ${OAUTH2_GOOGLE_API_ENDPOINT}
      SERVER_BASE_URL: ${SERVER_BASE_URL}
      CLIENT_BASE_URL: ${CLIENT_BASE_URL}
      ACCESSTOKEN_EXPIRES_IN: ${ACCESSTOKEN_EXPIRES_IN}
      REFRESHTOKEN_EXPIRES_IN: ${REFRESHTOKEN_EXPIRES_IN}
    command:
      - java -jar $(ls -t build/libs/*.jar | head -n 1)
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      elastic:
        condition: service_healthy
    expose:
      - "8080"
    networks:
      - king

  nginx:
    image: nginx:1.27.3-alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./king/dist:/usr/share/nginx/html
    depends_on:
      - springboot
    networks:
      - king

volumes:
  mysql-data:
  redis-data:
  elastic-data:

networks:
  king:
    driver: bridge
