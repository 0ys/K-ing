client:
  url: ${CLIENT_BASE_URL}
spring:
  application:
    name: king-backend
  jwt:
    secret: ${JWT_SECRET}
    accesstoken-expires-in: ${ACCESSTOKEN_EXPIRES_IN}
    refreshtoken-expires-in: ${REFRESHTOKEN_EXPIRES_IN}
  security:
    oauth2:
      client:
        registration:
          google:
            client-name: google
            client-id: ${OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH2_GOOGLE_CLIENT_SECRET}
            redirect-uri: ${SERVER_BASE_URL}${OAUTH2_GOOGLE_API_ENDPOINT}
            authorization-grant-type: authorization_code
            scope: email, profile
  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DB}?serverTimezone=UTC
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      timeout: 2000
    elasticsearch:
      repositories:
        enabled: true
  elasticsearch:
    uris: ${ELASTIC_HOST}:${ELASTIC_PORT}
    username: ${ELASTIC_USERNAME}
    password: ${ELASTIC_PASSWORD}
server:
  port: 8080
  servlet:
    context-path: /api
    encoding:
      force-response: true

logging:
  level:
    root: info
    org:
      springframework: WARN
