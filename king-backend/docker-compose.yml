services:
  mysql:
    image: mysql:8.0
    container_name: ${MYSQL_HOST}
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command:
      --skip-character-set-client-handshake
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql-data:/var/lib/mysql
    ports:
      - "3305:3306"
    networks:
      - king

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6378:6379"
    networks:
      - king

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
    container_name: elastic
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - king

  springboot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: springboot
    restart: always
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DB: ${MYSQL_DB}
      MYSQL_USERNAME: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      ELASTIC_HOST: ${ELASTIC_HOST}
      ELASTIC_PORT: ${ELASTIC_PORT}
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    depends_on:
      - mysql
      - redis
      - elastic
    ports:
      - "8080:8080"
    networks:
      - king

volumes:
  mysql-data:

networks:
  king:
    driver: bridge
